/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2022-12-14 09:18:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1670548498452L));
    _jspx_dependants.put("jar:file:/C:/Java/Workspace/Project2_Workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("	<head>\n");
      out.write("		<meta charset=\"UTF-8\">\n");
      out.write("		<title>Insert title here</title>\n");
      out.write("		<link rel=\"stylesheet\" href=\"/jsp/ect/index.css\" />\n");
      out.write("	</head>\n");
      out.write("	<body>\n");
      out.write("		");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("		<div class=\"main\">\n");
      out.write("			");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("			<section>	\n");
      out.write("				<p class=\"index--comment-kor\">\n");
      out.write("					결코 지금에 만족하지 말자,<br>\n");
      out.write("					항상 조금씩이라도 완벽에 가까워지려고 노력하자.<br>\n");
      out.write("					중요한 것은 꺾이지 않는 마음.<br>\n");
      out.write("				</p>\n");
      out.write("				<p class=\"index--comment-eng\">\n");
      out.write("					Let's never be satisfied with the present<br>\n");
      out.write("					Let's always try to get a little closer to perfection.<br>\n");
      out.write("					The important thing is an unbroken heart.<br>\n");
      out.write("				</p>\n");
      out.write("				<div class=\"aboutMe\">\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<h2>About Me</h2>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>경험 및 경력</strong><br>\n");
      out.write("							<p>I don't want a lot for Christmas There is just one thing I need I don't care about the presents underneath the Christmas tree I just want you for my own More than you could ever know Make my wish come true All I want for Christmas is you Yeah</p>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>좋아하는 것</strong><br>\n");
      out.write("							<p>I don't want a lot for Christmas There is just one thing I need (and I) Don't care about the presents underneath the Christmas tree I don't need to hang my stocking there upon the fireplace Santa Claus won't make me happy with a toy on Christmas Day, 민희</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>활동</strong><br>\n");
      out.write("							<p>I just want you for my own More than you could ever know Make my wish come true All I want for Christmas is you You, baby</p>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>성격</strong><br>\n");
      out.write("							<p>Oh, I won't ask for much this Christmas I won't even wish for snow (and I) I'm just gonna keep on waiting underneath the mistletoe I won't make a list and send it to the North Pole for Saint Nick I won't even stay awake to hear those magic reindeer click</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"aboutMe\">\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<h2>Wonhee Park</h2>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>Birth</strong><br>\n");
      out.write("							<p>1997-07-25</p>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>Tel</strong><br>\n");
      out.write("							<p>010-5003-3308</p>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<strong>E-mail</strong><br>\n");
      out.write("							<p>alzkdpf1783@gmail.com</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"aboutMe--div\">\n");
      out.write("						<div class=\"aboutMe--div--div\">\n");
      out.write("							<div>							\n");
      out.write("								<img alt=\"\" src=\"/image/me2.jpg\">\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"project\">\n");
      out.write("					<div class=\"project--h2\">\n");
      out.write("						<h2>Project</h2>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"project--item\">\n");
      out.write("						<div class=\"project--img modal-button\">						\n");
      out.write("							<img alt=\"\" src=\"/image/project0_1.JPG\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"project--content\">\n");
      out.write("							<strong>EZEN Funnyour</strong>\n");
      out.write("							<p>볼거라곤 디자인밖에 없는 가구 판매점.<br>메인화면, 카테고리, 제품 상세페이지, 장바구니, 게시판 구현</p>\n");
      out.write("							<strong>Using skill</strong>\n");
      out.write("							<p>HTML, CSS, JavaScript</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"project--item\">\n");
      out.write("						<div class=\"project--img modal-button2\">\n");
      out.write("							<img alt=\"\" src=\"/image/project1_0.JPG\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"project--content\">\n");
      out.write("							<strong>EZEN Nolja</strong>\n");
      out.write("							<p>회원들간의 소통이 가능한 커뮤니티<br>회원가입, 정보수정, 글과 댓글의 작성, 수정, 삭제, 검색, 페이징</p>\n");
      out.write("							<strong>Using skill</strong>\n");
      out.write("							<p>HTML, CSS, JavaScript, JSP, mySQL, Mybatis, JSTL</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</section>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"modal\">\n");
      out.write("			<div class=\"popup\">\n");
      out.write("				<img id=\"popup-img\" alt=\"\" src=\"\">\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("			document.querySelector(\".modal-button\").addEventListener(\"click\", show);\n");
      out.write("			document.querySelector(\".modal-button2\").addEventListener(\"click\", show2);\n");
      out.write("			document.querySelector(\".modal\").addEventListener(\"click\", close);\n");
      out.write("			function show() {\n");
      out.write("				document.querySelector(\"#popup-img\").src = \"/image/project0_1.JPG\"\n");
      out.write("				document.querySelector(\".modal\").className = \"modal show\";\n");
      out.write("			}\n");
      out.write("			function show2() {\n");
      out.write("				document.querySelector(\"#popup-img\").src = \"/image/project1_1.JPG\"\n");
      out.write("				document.querySelector(\".modal\").className = \"modal show\";\n");
      out.write("			}\n");
      out.write("			function close() {\n");
      out.write("				document.querySelector(\".modal\").className = \"modal\";\n");
      out.write("			}\n");
      out.write("		</script>\n");
      out.write("	</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /index.jsp(11,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("/jsp/ect/header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /index.jsp(13,3) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("/jsp/ect/aside.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
